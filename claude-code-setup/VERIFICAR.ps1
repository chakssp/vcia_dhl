# VERIFICA√á√ÉO R√ÅPIDA - CLAUDE CODE + VSCODE
Write-Host "üîç VERIFICANDO INSTALA√á√ÉO" -ForegroundColor Cyan
Write-Host "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ" -ForegroundColor Yellow

$errors = 0

# 1. Claude Code instalado?
Write-Host "`n1Ô∏è‚É£ Claude Code:" -NoNewline
$claude = Get-Command claude -ErrorAction SilentlyContinue
if ($claude) {
    Write-Host " ‚úÖ Instalado" -ForegroundColor Green
    Write-Host "   Vers√£o: $(claude --version 2>$null)" -ForegroundColor Gray
} else {
    Write-Host " ‚ùå N√ÉO instalado" -ForegroundColor Red
    Write-Host "   Execute: npm install -g @anthropic-ai/claude-code" -ForegroundColor Yellow
    $errors++
}

# 2. Configura√ß√£o existe?
Write-Host "`n2Ô∏è‚É£ Configura√ß√£o:" -NoNewline
$homeDir = if ($env:WSL_DISTRO_NAME) { $env:HOME } else { $env:USERPROFILE }
$configPath = Join-Path $homeDir ".claude\claude_desktop_config.json"
if (Test-Path $configPath) {
    Write-Host " ‚úÖ Encontrada" -ForegroundColor Green
    $config = Get-Content $configPath | ConvertFrom-Json
    Write-Host "   MCPs configurados: $($config.mcpServers.PSObject.Properties.Name.Count)" -ForegroundColor Gray
} else {
    Write-Host " ‚ùå N√ÉO encontrada" -ForegroundColor Red
    Write-Host "   Execute: .\SETUP-CLAUDE-CODE-VSCODE.ps1" -ForegroundColor Yellow
    $errors++
}

# 3. Node.js dispon√≠vel?
Write-Host "`n3Ô∏è‚É£ Node.js:" -NoNewline
$node = Get-Command node -ErrorAction SilentlyContinue
if ($node) {
    Write-Host " ‚úÖ Instalado" -ForegroundColor Green
    Write-Host "   Vers√£o: $(node --version)" -ForegroundColor Gray
} else {
    Write-Host " ‚ùå N√ÉO instalado" -ForegroundColor Red
    $errors++
}

# 4. VSCode instalado?
Write-Host "`n4Ô∏è‚É£ VSCode:" -NoNewline
$code = Get-Command code -ErrorAction SilentlyContinue
if ($code) {
    Write-Host " ‚úÖ Instalado" -ForegroundColor Green
} else {
    Write-Host " ‚ö†Ô∏è  N√ÉO encontrado no PATH" -ForegroundColor Yellow
}

# 5. Docker rodando? (para n8n-mcp)
Write-Host "`n5Ô∏è‚É£ Docker:" -NoNewline
try {
    $dockerVersion = docker version --format '{{.Server.Version}}' 2>$null
    if ($dockerVersion) {
        Write-Host " ‚úÖ Rodando" -ForegroundColor Green
        Write-Host "   Vers√£o: $dockerVersion" -ForegroundColor Gray
    } else {
        Write-Host " ‚ö†Ô∏è  Instalado mas n√£o rodando" -ForegroundColor Yellow
    }
} catch {
    Write-Host " ‚ùå N√ÉO dispon√≠vel" -ForegroundColor Red
}

# 6. MCPs instalados?
Write-Host "`n6Ô∏è‚É£ MCPs Locais:" -ForegroundColor White
$mcpDir = Join-Path $homeDir "mcp-servers"
if (Test-Path $mcpDir) {
    Write-Host "   ‚úÖ Diret√≥rio existe: $mcpDir" -ForegroundColor Green
    $subDirs = Get-ChildItem $mcpDir -Directory | Select-Object -First 5
    foreach ($dir in $subDirs) {
        Write-Host "   üì¶ $($dir.Name)" -ForegroundColor Gray
    }
} else {
    Write-Host "   ‚ö†Ô∏è  Diret√≥rio n√£o encontrado" -ForegroundColor Yellow
    Write-Host "   MCPs ser√£o baixados via npx na primeira execu√ß√£o" -ForegroundColor Gray
}

# 7. Launcher existe?
Write-Host "`n7Ô∏è‚É£ Launcher:" -NoNewline
$launcherPath = Join-Path $homeDir "claude-vscode.bat"
if (Test-Path $launcherPath) {
    Write-Host " ‚úÖ Criado" -ForegroundColor Green
    Write-Host "   $launcherPath" -ForegroundColor Gray
} else {
    Write-Host " ‚ö†Ô∏è  N√£o encontrado" -ForegroundColor Yellow
}

# RESUMO
Write-Host "`n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ" -ForegroundColor White
if ($errors -eq 0) {
    Write-Host "‚úÖ TUDO PRONTO!" -ForegroundColor Green
    Write-Host "`nPr√≥ximo passo:" -ForegroundColor Yellow
    Write-Host "1. Execute: claude login" -ForegroundColor White
    Write-Host "2. Depois: claude" -ForegroundColor White
} else {
    Write-Host "‚ùå PROBLEMAS ENCONTRADOS: $errors" -ForegroundColor Red
    Write-Host "`nExecute primeiro:" -ForegroundColor Yellow
    Write-Host ".\INSTALAR-TUDO.bat (como Admin)" -ForegroundColor White
}

Write-Host "`nüí° TESTE R√ÅPIDO:" -ForegroundColor Cyan
Write-Host "claude --version     # Ver vers√£o" -ForegroundColor Gray
Write-Host "claude /mcp         # Ver MCPs dispon√≠veis" -ForegroundColor Gray
Write-Host "claude /doctor      # Diagnosticar problemas" -ForegroundColor Gray

pause